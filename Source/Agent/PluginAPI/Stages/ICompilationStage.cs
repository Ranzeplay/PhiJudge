using Microsoft.Extensions.Logging;

namespace PhiJudge.Agent.API.Plugin.Stages
{
    /// <summary>
    /// The implementation will be invoked when compiling the source code mentioned in a record.
    /// </summary>
    public interface ICompilationStage
    {
        /// <summary>
        /// Invoked when there's a record to compile.
        /// </summary>
        /// <param name="directoryPath">The path to the directory where the record should be processed in</param>
        /// <param name="sourceCode">The source code to be compiled.</param>
        /// <param name="enableOptimization">A flag indicating whether optimization should be enabled during compilation.</param>
        /// <param name="warningAsError">A flag indicating whether warnings should be treated as errors during compilation.</param>
        /// <returns></returns>
        Task<CompilationResult> CompileAsync(string directoryPath, string sourceCode, bool enableOptimization, bool warningAsError);
        /// <summary>
        /// Invoked once the implementation instance being created.
        /// </summary>
        /// <param name="logger">The logger for the plugin generated by Executor.</param>
        void SetLogger(ILogger logger);
    }
}
